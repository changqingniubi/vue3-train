{"version":3,"file":"reactivity.global.js","sources":["../../shared/src/index.ts","../src/effect.ts","../src/reactive.ts","../src/computed.ts","../src/ref.ts"],"sourcesContent":["/*\n * @Description: \n * @Author: changqing\n * @Date: 2021-12-15 17:55:45\n * @LastEditTime: 2021-12-20 10:57:00\n * @LastEditors: changqing\n * @Usage: \n */\nexport function isObject(value: unknown): boolean {\n  return typeof value === 'object' && value !== null\n}\nexport function isFunction(value):boolean{\n  return typeof value === 'function'\n}\n\nexport function isString(value) {\n  return typeof value === 'string'\n}\n\nexport const enum ShapeFlags {\n  ELEMENT = 1, // 元素\n  FUNCTIONAL_COMPONENT = 1 << 1, // 函数式组件\n  STATEFUL_COMPONENT = 1 << 2, // 普通组件\n  TEXT_CHILDREN = 1 << 3, // 孩子是文本\n  ARRAY_CHILDREN = 1 << 4, // 孩子是数组\n  SLOTS_CHILDREN = 1 << 5, // 组件插槽\n  TELEPORT = 1 << 6, // teleport组件\n  SUSPENSE = 1 << 7, // suspense组件\n  COMPONENT = ShapeFlags.STATEFUL_COMPONENT | ShapeFlags.FUNCTIONAL_COMPONENT \t// 组件\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nexport const hasOwn = (value,key) => hasOwnProperty.call(value,key);\n/*\nlet r = ShapeFlags.ELEMENT | ShapeFlags.FUNCTIONAL_COMPONENT; // r包含元素和函数式组件\n// 我们像看r 是不是元素\n(r & ShapeFlags.ELEMENT) > 0; // 说明包含元素\n(r & ShapeFlags.FUNCTIONAL_COMPONENT) > 0\n*/\n\n\n  // 二进制  00000100  位移  | & 是做权限必备的一个操作 \n  // | 来组合权限 & 来判断是否包含某个权限\n  //   001 |  010 => 011  =3    011 & 001 = 001   011 & 010 => 010   011 & 100  -> 000\n  // 001\n  // 010\n  // 100","/*\n * @Description: \n * @Author: changqing\n * @Date: 2021-12-18 15:34:57\n * @LastEditTime: 2021-12-18 16:09:05\n * @LastEditors: changqing\n * @Usage: \n */\n\n// effect1(()=>{\n//     state.name\n//     effect2(()=>{\n//         state.age;\n//     })\n//     state.address\n// })\n// effectStack = [effect1] activeEffect = effect1\n// effect1 -> name\n// effectStack = [effect1，effect2] activeEffect = effect2\n// effect2 -> age\n// effectStack = [effect1] activeEffect = effect1\n// effect1 -> address\n\n\nlet effectStack = []; // 目的就是为了能保证我们effect执行的时候 可以存储正确的关系\nlet activeEffect;\n\n\nfunction cleanupEffect(effect) {\n  const { deps } = effect;\n  for (let dep of deps) {\n      // set 删除effect 让属性 删除掉对应的effect   name = []\n      dep.delete(effect); // 让属性对应的effect移除掉，这样属性更新的时候 就不会触发这个effect重新执行了\n  }\n}\n\n// 属性变化 触发的是 dep -> effect\n// effect.deps = [] 和属性是没关系的\nexport class ReactiveEffect {\n  active = true; // this.active = true;\n  deps = []; // 让effect 记录他依赖了哪些属性 ， 同时要记录当前属性依赖了哪个effect\n  constructor(public fn, public scheduler?) { // this.fn = fn;\n\n  }\n  run() { // 调用run的时候会让fn执行\n      if (!this.active) { // 稍后如果非激活状态 调用run方法 默认会执行fn函数\n          return this.fn();\n      }\n      if (!effectStack.includes(this)) { // 屏蔽同一个effect会多次执行\n          try {\n              effectStack.push(activeEffect = this);\n              return this.fn(); // 取值  new Proxy 会执行get方法  (依赖收集)\n          } finally {\n              effectStack.pop(); // 删除最后一个\n              activeEffect = effectStack[effectStack.length - 1]\n          }\n      }\n  }\n  stop() { // 让effect 和 dep 取消关联 dep上面存储的effect移除掉即可\n      if (this.active) {\n          cleanupEffect(this)\n          this.active = false;\n      }\n  }\n}\n// obj name :[effect]\n//     age : [effect]\n// {对象：{属性 ： [effect,effect]}  } \nexport function isTracking() {\n  return activeEffect !== undefined\n}\n\nconst targetMap = new WeakMap();\nexport function track(target, key) { // 一个属性对应多个effect， 一个effect中依赖了多个属性 =》 多对多\n  // 是只要取值我就要收集吗？不是\n  if (!isTracking()) { // 如果这个属性 不依赖于effect直接跳出即可\n      return\n  }\n  let depsMap = targetMap.get(target);\n  if (!depsMap) {\n      targetMap.set(target, (depsMap = new Map())); // {对象：map{}}\n  }\n  let dep = depsMap.get(key);\n  if (!dep) {\n      depsMap.set(key, (dep = new Set()));// {对象：map{name:set[]}}\n  }\n  trackEffects(dep);\n}\nexport function trackEffects(dep) {\n  let shouldTrack = !dep.has(activeEffect); // 看一下这个属性有没有存过这个effect\n  if (shouldTrack) {\n      dep.add(activeEffect); // // {对象：map{name:set[effect,effect]}}\n      activeEffect.deps.push(dep); // 稍后用到\n  } // { 对象：{name:set,age:set}\n\n}\nexport function trigger(target, key) {\n  let depsMap = targetMap.get(target);\n  if (!depsMap) return;// 属性修改的属性 根本没有依赖任何的effect\n  let deps = []; // [set ,set ]\n  if (key !== undefined) {\n      deps.push(depsMap.get(key));\n  }\n  let effects = [];\n  for (const dep of deps) {\n      effects.push(...dep)\n  }\n  triggerEffects(effects);\n}\nexport function triggerEffects(dep) {\n  for (const effect of dep) { // 如果当前effect执行 和 要执行的effect是同一个，不要执行了 防止循环\n      if (effect !== activeEffect) {\n          if (effect.scheduler) {\n              return effect.scheduler()\n          }\n          effect.run(); // 执行effect\n      }\n  }\n}\nexport function effect(fn) {\n  const _effect = new ReactiveEffect(fn);\n  _effect.run(); // 会默认让fn执行一次\n  let runner = _effect.run.bind(_effect);\n  runner.effect = _effect; // 给runner添加一个effect实现 就是 effect实例\n  return runner;\n}\n// vue3 的响应式原理  取值时 收集对应的effect， 改值时找到对应的effect执行","/*\n * @Description: \n * @Author: changqing\n * @Date: 2021-12-17 11:07:14\n * @LastEditTime: 2021-12-18 16:16:05\n * @LastEditors: changqing\n * @Usage: \n */\nimport { isObject } from \"@vue/shared\";\nimport { track, trigger } from \"./effect\";\n\nconst enum ReactiveFlags{\n  IS_REACTIVE = '__v_isReactive'\n}\n\nconst mutableHandlers: ProxyHandler<Record<any, any>> = {\n  get(target, key, recevier) { // 代理对象的本身\n      if (key === ReactiveFlags.IS_REACTIVE) {\n          return true;\n      }\n      // 这里取值了， 可以收集他在哪个effect中\n      track(target,key);\n      const res = Reflect.get(target, key, recevier); // target[key]\n      return res;\n  },\n  set(target, key, value, recevier) {\n      let oldValue = (target as any)[key]\n      const res = Reflect.set(target, key, value, recevier); // target[key] = value\n       // 如果改变值了， 可以在这里触发effect更新\n      if(oldValue !== value){ // 值不发生变化 effect不需要重新执行\n        trigger(target,key); // 找属性对应的effect让她重新执行\n      }\n      return res;\n  }\n}\n// map和weakMap的区别\nconst reactiveMap = new WeakMap(); // weakmap 弱引用   key必须是对象，如果key没有被引用可以被自动销毁\n\nfunction createReactiveObject(target: object) { \n  // 先默认认为这个target已经是代理过的属性了\n  if ((target as any)[ReactiveFlags.IS_REACTIVE]) {\n      return target\n  }\n  // reactiveApi 只针对对象才可以 \n  if (!isObject(target)) {\n      return target\n  }\n  const exisitingProxy = reactiveMap.get(target); // 如果缓存中有 直接使用上次代理的结果\n  if (exisitingProxy) {\n      return exisitingProxy\n  }\n  const proxy = new Proxy(target, mutableHandlers); // 当用户获取属性 或者更改属性的时候 我能劫持到\n  reactiveMap.set(target, proxy); // 将原对象和生成的代理对象 做一个映射表\n\n  return proxy; // 返回代理\n}\n\nexport function reactive(target: object) {\n  return createReactiveObject(target)\n}\nexport function toReactive(value){\n  return isObject(value) ? reactive(value) : value\n}\n// readonly shallowReactive shallowReadnly \n// export function readonly(){\n// }\n// export function shallowReactive(){\n// }\n// export function shallowReadnly(){\n// }\n","/*\n * @Description: \n * @Author: changqing\n * @Date: 2021-12-18 16:19:54\n * @LastEditTime: 2021-12-18 16:19:54\n * @LastEditors: changqing\n * @Usage: \n */\nimport { isFunction } from \"@vue/shared\";\nimport { isTracking, ReactiveEffect, trackEffects, triggerEffects } from \"./effect\";\n\n\nclass ComputedRefImpl {\n    public dep; // this.dep = undefined;\n    public _dirty = true; // this._dirty = true;\n    public __v_isRef = true;\n    public effect; // 计算属性是依赖于effect的\n    public _value;\n    constructor(getter, public setter) { // 只有调用computed()才执行一次\n        // 这里将计算属性包成一个effect\n        // 这里 我给计算属性变成了effect ，那么计算属性中的属性会收集这个effect\n        this.effect = new ReactiveEffect(getter,()=>{\n            // 稍后计算属性依赖的值变化 不要重新执行计算属性的effect，而是调用此函数\n            if(!this._dirty){\n                this._dirty = true;\n                triggerEffects(this.dep )\n            }\n        });\n    }\n    get value() { // 取值时会走get方法\n        if (isTracking()) { // 是否是在effect中取值的\n            trackEffects(this.dep || (this.dep = new Set))\n        }\n        if (this._dirty) {\n            // 将结果缓存到this._value 这样就不用每次都run了\n            this._value = this.effect.run();\n            this._dirty = false;\n        }\n        return this._value;\n    }\n    set value(newValue) {\n        this.setter(newValue); // 如果修改计算属性的值 就触发你自己的set方法\n    }\n}\nexport function computed(getterOrOptions) {\n    const onlyGetter = isFunction(getterOrOptions);\n    let getter;\n    let setter;\n    if (onlyGetter) {\n        getter = getterOrOptions;\n        setter = () => { }\n    } else {\n        getter = getterOrOptions.get;\n        setter = getterOrOptions.set;\n    }\n\n    return new ComputedRefImpl(getter, setter)\n}","/*\n * @Description: \n * @Author: changqing\n * @Date: 2021-12-18 16:43:46\n * @LastEditTime: 2021-12-18 16:48:58\n * @LastEditors: changqing\n * @Usage: \n */\nimport { isTracking, trackEffects, triggerEffects } from \"./effect\";\nimport { toReactive } from \"./reactive\";\n\nclass RefImpl{\n    public dep;\n    public __v_isRef;\n    public _value;\n    constructor(public _rawValue){ // 原来的值\n        // _rawValue如果用户传进来的值 是一个对象 我需要将对象转化成响应式\n        this._value = toReactive(_rawValue)\n    }\n\n  \n    // 类的属性访问器 最终会变成deifneProperty\n    get value(){ // 取值的时候进行依赖收集\n        if(isTracking()){\n            trackEffects(this.dep || (this.dep = new Set()));\n        }\n        return this._value;\n    }\n    set value(newValue){ // 设置的时候触发更新\n        if(newValue !== this._rawValue){\n            // 先看一下之前之后是否一样\n            this._rawValue = newValue;\n            this._value =  toReactive(newValue);\n            triggerEffects(this.dep);\n        }\n    }\n}\n\nfunction createRef(value){\n\n    return new RefImpl(value);\n}\n\n\nexport function ref(value){\n    return createRef(value);\n}\n\n// export function shallowRef(value){\n //   return createRef(value,true);\n// }\n\n// reactive readonly "],"names":[],"mappings":"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"}